pipeline {
    agent any

    parameters {
        string(name: 'AWS_CREDENTIALS_ID', defaultValue: 'AWS-ACCESS-KEYS', description: 'The ID of the AWS credentials stored in Jenkins')
    }

    stages {
        stage('Terraform Init') {
            steps {
                script {
                    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: "${params.AWS_CREDENTIALS_ID}"]]) {
                        echo 'Initializing Terraform...'

                        sh 'terraform workspace select qa && terraform init'
                    }
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                script {
                    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: "${params.AWS_CREDENTIALS_ID}"]]) {
                        echo 'Planning Terraform changes...'
                        sh 'terraform plan'
                    }
                }
            }
        }

        stage('Terraform Apply') {
            steps {
                script {
                    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: "${params.AWS_CREDENTIALS_ID}"]]) {
                        echo 'Applying Terraform changes...'
                        sh 'terraform apply -var-file="qa.tfvars" -auto-approve'
                    }
                }
            }
        }

        stage('Terraform Destroy') {
            steps {
                script {
                    input message: 'Do you want to destroy the resources?', ok: 'Yes'
                    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: "${params.AWS_CREDENTIALS_ID}"]]) {
                        echo 'Destroying Terraform resources...'
                        sh 'terraform destroy -var-file="qa.tfvars" -auto-approve'
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Cleaning up workspace...'
            cleanWs()
        }
    }
}